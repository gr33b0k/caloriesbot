from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest
from app.constants import *


def calculate_calories(data: dict) -> dict:
    age = int(data["age"])
    sex = data["sex"]
    height = int(data["height"])
    weight = int(data["weight"])
    activity = data["activity"]
    goal = data["goal"]

    if sex == "male":
        metabolism = 10 * weight + 6.25 * height - 5 * age + 5
    else:
        metabolism = 10 * weight + 6.25 * height - 5 * age - 161

    if activity == "inactive":
        calorie_intake = metabolism * 1.2
        proteins = weight * 1.5
    elif activity == "light":
        calorie_intake = metabolism * 1.38
        proteins = weight * 1.5
    elif activity == "moderate":
        calorie_intake = metabolism * 1.55
        proteins = weight * 2
    elif activity == "high":
        calorie_intake = metabolism * 1.73
        proteins = weight * 2.5
    elif activity == "very-high":
        calorie_intake = metabolism * 2.2
        proteins = weight * 3

    if goal == "loss":
        calorie_intake -= (calorie_intake * 15) / 100
    elif goal == "gain":
        calorie_intake += (calorie_intake * 15) / 100

    fats = weight * 1.3
    carbons = (calorie_intake - proteins * 4.1 - fats * 9.3) / 4.1

    water = weight * 30

    return {
        "calorie_intake": int(calorie_intake),
        "proteins": int(proteins),
        "fats": int(fats),
        "carbons": int(carbons),
        "water": int(water),
    }


def build_menu_message(is_registration):
    message_text = (
        (
            "üéâ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b> üéâ\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:\n\n"
            if is_registration
            else ""
        )
        + "üìä <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "‚Ä¢ /recipes - –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n"
        "‚Ä¢ /delete_meals - –£–¥–∞–ª–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∏–µ–º—ã –ø–∏—â–∏\n"
        "‚Ä¢ /show_today_calories - –ü–æ–∫–∞–∑–∞—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –ö–ë–ñ–£ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "‚Ä¢ /track_water - –û—Ç–º–µ—Ç–∏—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–æ–¥—ã\n"
        "‚Ä¢ /my_goal - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å\n\n"
        "‚ùì <b>–ü–æ–º–æ—â—å:</b>\n"
        "‚Ä¢ /help - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n"
        "‚Ä¢ /privacy - –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏\n\n"
    )
    return message_text


def build_profile_message(user_data):
    message_text = (
        "üë§ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        "üìù <b>–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
        f"  üè∑Ô∏è –ò–º—è: <code>{user_data.name}</code>\n"
        f"  üöª –ü–æ–ª : <code>{SEX_MAPPING.get(user_data.sex, user_data.sex)}</code>\n"
        f"  üéÇ –í–æ–∑—Ä–∞—Å—Ç: <code>{user_data.age} –ª–µ—Ç</code>\n"
        f"  üìè –†–æ—Å—Ç: <code>{user_data.height} —Å–º</code>\n"
        f"  ‚öñÔ∏è –í–µ—Å: <code>{user_data.weight} –∫–≥</code>\n\n"
        f"  üèÉ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: <code>{ACTIVITY_MAPPING.get(user_data.activity, user_data.activity)}</code>\n"
        f"  üéØ –¶–µ–ª—å: <code>{GOAL_MAPPING.get(user_data.goal, user_data.goal)}</code>\n"
        "üìä <b>–î–Ω–µ–≤–Ω—ã–µ –Ω–æ—Ä–º—ã:</b>\n"
        f"  üî• –ö–∞–ª–æ—Ä–∏–∏: <code>{user_data.calorie_intake} –∫–∫–∞–ª</code>\n"
        f"  üçó –ë–µ–ª–∫–∏: <code>{user_data.proteins} –≥</code>\n"
        f"  ü•ë –ñ–∏—Ä—ã: <code>{user_data.fats} –≥</code>\n"
        f"  üçö –£–≥–ª–µ–≤–æ–¥—ã: <code>{user_data.carbons} –≥</code>\n"
        f"  üíß –í–æ–¥–∞: <code>{user_data.water} –º–ª</code>\n\n"
        "‚úèÔ∏è <i>–•–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å?</i>"
    )
    return message_text


async def is_user_in_chat(bot, user_id, chat_id):
    try:
        member = await bot.get_chat_member(chat_id, user_id)
        return member.status in ["member", "administrator", "creator"]
    except (TelegramForbiddenError, TelegramBadRequest):
        return False
